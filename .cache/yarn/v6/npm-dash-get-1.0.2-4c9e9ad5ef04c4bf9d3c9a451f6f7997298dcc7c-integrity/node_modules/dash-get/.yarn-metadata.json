{
  "manifest": {
    "name": "dash-get",
    "version": "1.0.2",
    "description": "A tiny get function, similar to Lodash.get",
    "main": "dist/index.js",
    "scripts": {
      "build": "npm run clean && npm run build:ts && npm run build:minify && npm run build:postclean",
      "build:ts": "tsc",
      "build:minify": "uglifyjs dist/index.js --output dist/index.js --compress --mangle",
      "build:postclean": "rm -rf dist/__tests__",
      "clean": "rm -rf dist",
      "dev": "npm run test -- --watch",
      "git:push": "git push --follow-tags",
      "release": "npm version",
      "version": "npm run build",
      "postversion": "npm publish && npm run git:push",
      "test": "jest"
    },
    "author": {
      "name": "Jon Quach",
      "email": "hello@jonquach.com",
      "url": "https://jonquach.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/itsjonq/dash-get.git"
    },
    "bugs": {
      "url": "https://github.com/itsjonq/dash-get/issues"
    },
    "keywords": [
      "get",
      "dash",
      "tiny",
      "lodash",
      "dash-get",
      "object",
      "value"
    ],
    "devDependencies": {
      "@types/jest": "23.3.10",
      "jest": "23.6.0",
      "ts-jest": "23.10.5",
      "typescript": "3.2.1",
      "uglify-js": "3.4.9"
    },
    "_registry": "npm",
    "_loc": "/home/erp/.cache/yarn/v6/npm-dash-get-1.0.2-4c9e9ad5ef04c4bf9d3c9a451f6f7997298dcc7c-integrity/node_modules/dash-get/package.json",
    "readmeFilename": "README.md",
    "readme": "# ✊ (dash) get\n\n[![Build Status](https://travis-ci.org/ItsJonQ/dash-get.svg?branch=master)](https://travis-ci.org/ItsJonQ/dash-get)\n[![npm version](https://badge.fury.io/js/dash-get.svg)](https://badge.fury.io/js/dash-get)\n\n> A tiny get function', similar to Lodash.get\n\n## ✨ Features\n\n- **Zero dependencies**!\n- Super tiny, at ~200 bytes gzipped\n- Works almost exactly like [Lodash.get](https://lodash.com/docs/4.17.11#get)\n- Ultra speedy! Check out the [performance tests](https://jsperf.com/get-try-catch-vs-reduce-vs-lodash-get)\n\n## 🔧 Installation\n\nAdd `dash-get` to your project via `npm install`:\n\n```\nnpm install --save dash-get\n```\n\n## 🕹 Usage\n\nYou can easily retrieve a value from a (deeply) nested object with `dash-get`, like so:\n\n```js\nimport get from 'dash-get'\n\nconst someObject = {...}\n\nconst deeplyNestedValue = get(someObject, 'the.path.to.the.nested.value')\n// value\n```\n\nThe path could also be an `Array`:\n\n```js\nconst someObject = {...}\n\nconst deeplyNestedValue = get(someObject, ['the', 'path', 'to', 'the', 'nested', 'value'])\n// value\n```\n\n## 🎬 API\n\n#### `get(obj, path, fallback)`\n\n| Argument | Type                     | Description                                                           |\n| -------- | ------------------------ | --------------------------------------------------------------------- |\n| obj      | `Object`                 | The object to get the value from.                                     |\n| path     | `Array<string>`/`string` | The path to the value.                                                |\n| fallback | `any`                    | The fallback value, in case the desired value could not be retrieved. |\n\n## 👻 Unsupported feature\n\nThis module does not support this particular use case:\n\n```\nget(object, 'a[0].b.c')\n```\n\n## 🤔 Why an npm module tho?\n\nYou totally don't have to `npm install` this. This exists for convenience purposes 😊.\n\nIn fact, it's encouraged that you add the `get` code to your code base! One less depenency to install and manage.\n\nHere it is!\n\n```js\nfunction get(obj, path, fallback) {\n  if (!obj || !path) return fallback;\n  const paths = Array.isArray(path) ? path : path.split(\".\");\n  let results = obj;\n  let i = 0;\n\n  while (i < paths.length && results !== undefined && results !== null) {\n    results = results[paths[i]];\n    i++;\n  }\n\n  if (i === paths.length) {\n    return results !== undefined ? results : fallback;\n  }\n\n  return results !== undefined && results !== null ? results : fallback;\n}\n```\n\n## ❤️ Thanks\n\nThanks to [@knicklabs](https://github.com/knicklabs) for pairing with me on this one!\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Jon Quach <hello@jonquach.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dash-get/-/dash-get-1.0.2.tgz#4c9e9ad5ef04c4bf9d3c9a451f6f7997298dcc7c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dash-get/-/dash-get-1.0.2.tgz",
    "hash": "4c9e9ad5ef04c4bf9d3c9a451f6f7997298dcc7c",
    "integrity": "sha512-4FbVrHDwfOASx7uQVxeiCTo7ggSdYZbqs8lH+WU6ViypPlDbe9y6IP5VVUDQBv9DcnyaiPT5XT0UWHgJ64zLeQ==",
    "registry": "npm",
    "packageName": "dash-get",
    "cacheIntegrity": "sha512-4FbVrHDwfOASx7uQVxeiCTo7ggSdYZbqs8lH+WU6ViypPlDbe9y6IP5VVUDQBv9DcnyaiPT5XT0UWHgJ64zLeQ== sha1-TJ6a1e8ExL+dPJpFH295lymNzHw="
  },
  "registry": "npm",
  "hash": "4c9e9ad5ef04c4bf9d3c9a451f6f7997298dcc7c"
}