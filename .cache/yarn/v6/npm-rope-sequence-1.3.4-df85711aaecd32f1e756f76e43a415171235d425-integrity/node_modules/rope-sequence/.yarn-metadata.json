{
  "manifest": {
    "name": "rope-sequence",
    "version": "1.3.4",
    "description": "Rope-based persistent sequence type",
    "main": "dist/index.cjs",
    "type": "module",
    "module": "dist/index.js",
    "exports": {
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    },
    "scripts": {
      "build": "rollup -c",
      "prepare": "npm run build",
      "test": "node test.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/marijnh/rope-sequence.git"
    },
    "keywords": [
      "persistent",
      "data",
      "structure",
      "rope",
      "sequence"
    ],
    "author": {
      "name": "Marijn Haverbeke",
      "email": "marijn@haverbeke.berlin"
    },
    "license": "MIT",
    "devDependencies": {
      "@rollup/plugin-buble": "^0.20.0",
      "rollup": "^1.26.3"
    },
    "_registry": "npm",
    "_loc": "/home/erp/.cache/yarn/v6/npm-rope-sequence-1.3.4-df85711aaecd32f1e756f76e43a415171235d425-integrity/node_modules/rope-sequence/package.json",
    "readmeFilename": "README.md",
    "readme": "# rope-sequence\n\nThis module implements a single data type, `RopeSequence`, which is a\npersistent sequence type implemented as a loosely-balanced\n[rope](https://www.cs.rit.edu/usr/local/pub/jeh/courses/QUARTERS/FP/Labs/CedarRope/rope-paper.pdf).\nIt supports appending, prepending, and slicing without doing a full\ncopy. Random access is somewhat more expensive than in an array\n(logarithmic, with some overhead), but should still be relatively\nfast.\n\nLicensed under the MIT license.\n\n## class `RopeSequence<T>`\n\n`static `**`from`**`(?union<[T], RopeSequence<T>>) → RopeSequence<T>`\n\nCreate a rope representing the given array, or return the rope itself\nif a rope was given.\n\n`static `**`empty`**`: RopeSequence<T>`\n\nThe empty rope.\n\n**`length`**`: number`\n\nThe length of the rope.\n\n**`append`**`(union<[T], RopeSequence<T>>) → RopeSequence<T>`\n\nAppend an array or other rope to this one, returning a new rope.\n\n**`prepend`**`(union<[T], RopeSequence<T>>) → RopeSequence<T>`\n\nPrepend an array or other rope to this one, returning a new rope.\n\n**`slice`**`(from: ?number = 0, to: ?number = this.length) → RopeSequence<T>`\n\nCreate a rope repesenting a sub-sequence of this rope.\n\n**`get`**`(index: number) → T`\n\nRetrieve the element at the given position from this rope.\n\n**`forEach`**`(f: fn(element: T, index: number) → ?bool, from: ?number, to: ?number)`\n\nCall the given function for each element between the given indices.\nThis tends to be more efficient than looping over the indices and\ncalling `get`, because it doesn't have to descend the tree for every\nelement.\n\n`to` may be less then `from`, in which case the iteration will happen\nin reverse (starting at index `from - 1`, down to index `to`.\n\nThe iteration function may return `false` to abort iteration early.\n\n**`map`**`(f: fn(element: T, index: number) → U, from: ?number, to: ?number) → [U]`\n\nMap the given functions over the elements of the rope, producing a\nflat array.\n\n**`flatten`**`() → [T]`\n\nReturn the content of this rope as an array.\n",
    "licenseText": "Copyright (C) 2016 by Marijn Haverbeke <marijn@haverbeke.berlin>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rope-sequence/-/rope-sequence-1.3.4.tgz#df85711aaecd32f1e756f76e43a415171235d425",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rope-sequence/-/rope-sequence-1.3.4.tgz",
    "hash": "df85711aaecd32f1e756f76e43a415171235d425",
    "integrity": "sha512-UT5EDe2cu2E/6O4igUr5PSFs23nvvukicWHx6GnOPlHAiiYbzNuCRQCuiUdHJQcqKalLKlrYJnjY0ySGsXNQXQ==",
    "registry": "npm",
    "packageName": "rope-sequence",
    "cacheIntegrity": "sha512-UT5EDe2cu2E/6O4igUr5PSFs23nvvukicWHx6GnOPlHAiiYbzNuCRQCuiUdHJQcqKalLKlrYJnjY0ySGsXNQXQ== sha1-34VxGq7NMvHnVvduQ6QVFxI11CU="
  },
  "registry": "npm",
  "hash": "df85711aaecd32f1e756f76e43a415171235d425"
}